{"version":3,"sources":["App.js","serviceWorker.js","index.js","img/profile.jpg"],"names":["App","react_default","a","createElement","className","src","profile","alt","target","rel","href","fa","size","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8b11ba4a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport profile from './img/profile.jpg';\nimport './App.css';\nimport { FaLinkedin, FaFacebook, FaEnvelope, FaHashtag, FaGithub } from 'react-icons/fa';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={profile} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            ZAW HLAING BWAR <code>(Full-stack developer)</code>\n          </p>\n        </header>\n        <div className=\"iconContainer\">\n          <a className=\"icon-anchor\" target='_blank' rel=\"noopener noreferrer\" href={\"https://www.linkedin.com/in/zawhlaingbwar/\"}>\n            <FaLinkedin size={40} className=\"icon lkicon\"/>\n          </a>\n          <a className=\"icon-anchor\" target='_blank' rel=\"noopener noreferrer\" href={\"https://www.facebook.com/zawhlaingbwarr/\"}>\n            <FaFacebook size={40} className=\"icon fbicon\"/>\n          </a>\n          <a className=\"icon-anchor\" target='_blank' rel=\"noopener noreferrer\" href={\"https://github.com/zaw-hlaing-bwar\"}>\n            <FaGithub size={40} className=\"icon ghicon\"/>\n          </a>\n          <a className=\"icon-anchor\" target='_blank' rel=\"noopener noreferrer\" href={\"mailto:zawhlaingbwarr@gmail.com\"}>\n            <FaEnvelope size={40} className=\"icon gmicon\"/>\n          </a>\n        </div>\n        <div className=\"summary\">\n        <h2>Summary</h2>\n          I am a highly passionate developer leading for full stacks.\n          I have strong logical thinking and problem solving skill come along with innovative business ideas.\n          I also understand both object oriented programming and functional programming.\n          I am a developer with both frontend, backend, core application and mobile experiences.\n          I can create and consume both rest and graphql endpoints.\n          I am a fast learner and always willing to learn new technologies.\n        </div>\n        <div className=\"skills\">\n        <h2>Technology skills</h2>\n          <div className=\"skill\"><FaHashtag size={15}/> Node.js</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Reactjs</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Nextjs</div>\n          <div className=\"skill\"><FaHashtag size={15}/> React Native</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Electronjs</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Meteor</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Graphql</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Ruby</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Blockchain</div>\n          <div className=\"skill\"><FaHashtag size={15}/> MultiChain</div>\n          <div className=\"skill\"><FaHashtag size={15}/> PHP</div>\n          <div className=\"skill\"><FaHashtag size={15}/> MySQL</div>\n          <div className=\"skill\"><FaHashtag size={15}/> PostgreSQL</div>\n          <div className=\"skill\"><FaHashtag size={15}/> MongoDB</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Redis</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Laravel</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Ruby on Rails</div>\n          <div className=\"skill\"><FaHashtag size={15}/> CodeIgniter</div>\n          <div className=\"skill\"><FaHashtag size={15}/> EC-CUBE</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Symfony</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Project Management</div>\n          <div className=\"skill\"><FaHashtag size={15}/> Rest API</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile.dc15e9b3.jpg\";"],"sourceRoot":""}